apiVersion: apps/v1
kind: Deployment
metadata:
  name: hikma-api
  namespace: hikma-engine
  labels:
    app: hikma-api
    version: v1.0.0
    component: api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: hikma-api
  template:
    metadata:
      labels:
        app: hikma-api
        version: v1.0.0
        component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/api/v1/monitoring/metrics"
    spec:
      serviceAccountName: hikma-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: hikma-api
        image: hikma-engine/api:1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: HIKMA_API_PORT
          value: "3000"
        - name: HIKMA_API_HOST
          value: "0.0.0.0"
        - name: HIKMA_LANCEDB_PATH
          value: "/app/data/lancedb"
        - name: HIKMA_SQLITE_PATH
          value: "/app/data/metadata.db"
        - name: HIKMA_TINKERGRAPH_URL
          value: "ws://hikma-tinkergraph:8182/gremlin"
        - name: HIKMA_API_REDIS_ENABLED
          value: "true"
        - name: HIKMA_API_REDIS_URL
          value: "redis://hikma-redis:6379"
        - name: HIKMA_API_MONITORING_ENABLED
          value: "true"
        - name: HIKMA_API_LOG_LEVEL
          value: "info"
        - name: HIKMA_API_LOG_FORMAT
          value: "json"
        envFrom:
        - configMapRef:
            name: hikma-api-config
        - secretRef:
            name: hikma-api-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/v1/monitoring/liveness
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v1/monitoring/readiness
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/v1/monitoring/liveness
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10
        volumeMounts:
        - name: data
          mountPath: /app/data
        - name: logs
          mountPath: /app/logs
        - name: config
          mountPath: /app/config
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: hikma-api-data
      - name: logs
        emptyDir: {}
      - name: config
        configMap:
          name: hikma-api-config
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - hikma-api
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: hikma-api
  namespace: hikma-engine
  labels:
    app: hikma-api
    component: api
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  selector:
    app: hikma-api

---
apiVersion: v1
kind: Service
metadata:
  name: hikma-api-internal
  namespace: hikma-engine
  labels:
    app: hikma-api
    component: api
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 3000
    targetPort: http
    protocol: TCP
  selector:
    app: hikma-api

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hikma-api
  namespace: hikma-engine
  labels:
    app: hikma-api
    component: api

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hikma-api-config
  namespace: hikma-engine
  labels:
    app: hikma-api
    component: api
data:
  HIKMA_API_CORS_ENABLED: "true"
  HIKMA_API_CORS_ORIGINS: "https://app.hikma-engine.com,https://dashboard.hikma-engine.com"
  HIKMA_API_RATE_LIMIT_ENABLED: "true"
  HIKMA_API_RATE_LIMIT_MAX_REQUESTS: "100"
  HIKMA_API_RATE_LIMIT_WINDOW_MS: "60000"
  HIKMA_API_CACHE_ENABLED: "true"
  HIKMA_API_CACHE_TTL_SEMANTIC: "900"
  HIKMA_API_CACHE_TTL_STRUCTURAL: "1800"
  HIKMA_API_CACHE_TTL_GIT: "3600"
  HIKMA_API_HEALTH_CHECK_ENABLED: "true"
  HIKMA_API_HEALTH_CHECK_INTERVAL: "30000"
  HIKMA_API_METRICS_ENABLED: "true"
  HIKMA_API_ALERTS_ENABLED: "true"

---
apiVersion: v1
kind: Secret
metadata:
  name: hikma-api-secrets
  namespace: hikma-engine
  labels:
    app: hikma-api
    component: api
type: Opaque
data:
  # Base64 encoded secrets
  HIKMA_API_JWT_SECRET: <base64-encoded-jwt-secret>
  HIKMA_API_KEYS: <base64-encoded-api-keys>

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: hikma-api-data
  namespace: hikma-engine
  labels:
    app: hikma-api
    component: api
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: gp2

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hikma-api
  namespace: hikma-engine
  labels:
    app: hikma-api
    component: api
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - api.hikma-engine.com
    secretName: hikma-api-tls
  rules:
  - host: api.hikma-engine.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: hikma-api
            port:
              number: 80

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: hikma-api
  namespace: hikma-engine
  labels:
    app: hikma-api
    component: api
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: hikma-api

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hikma-api
  namespace: hikma-engine
  labels:
    app: hikma-api
    component: api
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hikma-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
